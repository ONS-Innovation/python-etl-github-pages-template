# ${{ values.docs_site_name or values.repository_name }}

${{ values.docs_site_description or values.repository_description }}

## Overview

This documentation site contains the results and analysis from the ETL pipeline processing for the **${{ values.repository_name }}** project.

## Features

This ETL pipeline includes:

- **Extract**: Data extraction from various sources
- **Transform**: Data cleaning and processing
- **Load**: Data output and validation
{% if values.enable_deployment -%}
- **Deploy**: Automatic documentation generation and deployment
{% endif %}

## Available Reports

- [Data Report](data_report.md) - Detailed analysis of the processed data including:
  - Data summary and statistics
  - Column information and data types
  - Missing value analysis
  - Sample data preview
  - Statistical summaries

## Getting Started

1. **Clone the repository**:
   ```bash
   git clone https://github.com/${{ values.repository_owner }}/${{ values.repository_name }}.git
   cd ${{ values.repository_name }}
   ```

2. **Install dependencies**:
   {% if values.package_manager == 'poetry' -%}
   ```bash
   poetry install
   ```
   {% else -%}
   ```bash
   pipenv install
   ```
   {% endif %}

3. **Run the ETL pipeline**:
   {% if values.package_manager == 'poetry' -%}
   ```bash
   poetry run python run_etl.py
   ```
   {% else -%}
   ```bash
   pipenv run python run_etl.py
   ```
   {% endif %}

{% if values.enable_deployment -%}
4. **View results**: The processed data and analysis will be automatically deployed to this documentation site.
{% endif %}

## Project Information

- **Repository**: [${{ values.repository_name }}](https://github.com/${{ values.repository_owner }}/${{ values.repository_name }})
- **Owner**: ${{ values.repository_owner }}
- **Package Manager**: [${{ values.package_manager | title }}](${{ values.package_manager_url }})
- **Python Module**: `$${{ values.module_name }}`

## Documentation

{% if values.enable_deployment -%}
This documentation is automatically generated and deployed using MkDocs and GitHub Pages whenever the ETL pipeline runs.
{% else -%}
To build and serve this documentation locally:

```bash
mkdocs serve -f mkdocs/mkdocs.yml
```
{% endif %}

---

*This documentation is automatically generated from the ETL pipeline results.*
